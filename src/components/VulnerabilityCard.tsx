import React from 'react';
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { AlertCircle, AlertTriangle, Info, ShieldCheck } from 'lucide-react';
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from '@/components/ui/accordion';
import { cn } from '@/lib/utils';
import { VulnerabilityResult } from '@/types/vulnerability';

interface VulnerabilityCardProps {
  vulnerability: VulnerabilityResult;
}

const VulnerabilityCard: React.FC<VulnerabilityCardProps> = ({ vulnerability }) => {
  const getSeverityColor = (severity: string) => {
    switch (severity) {
      case 'critical': return 'bg-security-critical text-white';
      case 'high': return 'bg-security-high text-white';
      case 'medium': return 'bg-security-medium text-black';
      case 'low': return 'bg-security-low text-white';
      default: return 'bg-security-info text-white';
    }
  };

  const getSeverityIcon = (severity: string) => {
    switch (severity) {
      case 'critical': 
        return <AlertCircle className="h-4 w-4" />;
      case 'high': 
        return <AlertTriangle className="h-4 w-4" />;
      case 'medium': 
        return <Info className="h-4 w-4" />;
      case 'low': 
        return <ShieldCheck className="h-4 w-4" />;
      default: 
        return <Info className="h-4 w-4" />;
    }
  };

  return (
    <Card className={cn(
      "w-full border-l-4",
      vulnerability.severity === 'critical' && "border-l-security-critical",
      vulnerability.severity === 'high' && "border-l-security-high",
      vulnerability.severity === 'medium' && "border-l-security-medium",
      vulnerability.severity === 'low' && "border-l-security-low",
    )}>
      <CardHeader>
        <div className="flex justify-between items-start">
          <div>
            <CardTitle className="text-lg">{vulnerability.type}</CardTitle>
            <CardDescription className="mt-1">{vulnerability.description}</CardDescription>
          </div>
          <Badge className={getSeverityColor(vulnerability.severity)}>
            <span className="flex items-center gap-1">
              {getSeverityIcon(vulnerability.severity)}
              {vulnerability.severity.charAt(0).toUpperCase() + vulnerability.severity.slice(1)}
            </span>
          </Badge>
        </div>
      </CardHeader>
      <CardContent className="pb-0">
        <div className="text-sm mb-2">
          <span className="text-muted-foreground">Location: </span>
          <code className="rounded bg-muted px-1 py-0.5">{vulnerability.location}</code>
        </div>
        
        <Accordion type="single" collapsible className="w-full">
          <AccordionItem value="code">
            <AccordionTrigger className="text-sm">Vulnerable Code</AccordionTrigger>
            <AccordionContent>
              <pre className="bg-muted p-2 rounded-md overflow-x-auto text-xs">
                <code>{vulnerability.code}</code>
              </pre>
            </AccordionContent>
          </AccordionItem>
        </Accordion>
      </CardContent>
      <CardFooter className="flex flex-col items-start pt-2">
        <h4 className="text-sm font-medium mb-1">Remediation:</h4>
        <p className="text-sm text-muted-foreground">{vulnerability.remediation}</p>
      </CardFooter>
    </Card>
  );
};

export default VulnerabilityCard;
